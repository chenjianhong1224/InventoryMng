<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjh.InventoryMng.mapper.CustomQueryMapper">
	<resultMap id="GoodsResultMap" type="com.cjh.InventoryMng.entity.TGoodsInfo">
		<id column="Id" jdbcType="INTEGER" property="id" />
		<result column="good_name" jdbcType="VARCHAR" property="goodName" />
		<result column="manufacturer_id" jdbcType="INTEGER" property="manufacturerId" />
		<result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
		<result column="specifications" jdbcType="VARCHAR" property="specifications" />
		<result column="purchase_price" jdbcType="INTEGER" property="purchasePrice" />
		<result column="member_price" jdbcType="INTEGER" property="memberPrice" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="creator" jdbcType="VARCHAR" property="creator" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="updater" jdbcType="VARCHAR" property="updater" />
	</resultMap>
	<select id="queryGoodsByManufacturerGoodName" resultMap="GoodsResultMap">
		select Id, good_name, manufacturer_id, supplier_id, specifications,
		purchase_price, member_price,
		status, create_time, creator,
		update_time, updater from t_goods_info e
		WHERE 1 = 1 AND status = 1
		<if test="manufacturerId != null">
			AND e.manufacturer_id = #{manufacturerId,
			jdbcType=INTEGER}
		</if>
		<if test="goodName != null">
			<bind name="pattern" value="'%' + _parameter.goodName + '%'" />
			AND e.good_name LIKE #{pattern}
		</if>
	</select>
	<select id="queryMemberEffectiveGoodsByManufacturerGoodsName"
		resultMap="GoodsResultMap">
		select e.Id, good_name, manufacturer_id, e.supplier_id,
		specifications,
		purchase_price, member_price,
		e.status, e.create_time,
		e.creator,
		e.update_time, e.updater from t_goods_info e, t_supplier a,
		t_group_map b, t_member_info c
		WHERE 1 = 1 AND e.status = 1 AND a.id = b.supplier_id
		AND e.supplier_id = a.id
		AND b.member_id = #{memberId,
		jdbcType=INTEGER}
		AND b.member_id = c.id 
		AND not exists (select 1 from t_goods_blacklist f 
					where f.status = 1 
					AND f.province = c.province 
					AND f.city = c.city 
					AND e.id = f.goods_id )
		<if test="manufacturerId != null">
			AND e.manufacturer_id = #{manufacturerId,
			jdbcType=INTEGER}
		</if>
		<if test="goodName != null">
			<bind name="pattern" value="'%' + _parameter.goodName + '%'" />
			AND e.good_name LIKE #{pattern}
		</if>
		 order by e.id
	</select>
	<resultMap id="MemberBillResultMap" type="com.cjh.InventoryMng.entity.VMemberBillInfo">
		<result column="member_id" jdbcType="INTEGER" property="memberId" />
		<result column="member_name" jdbcType="VARCHAR" property="memberName" />
		<result column="brand_id" jdbcType="INTEGER" property="brandId" />
		<result column="brand_name" jdbcType="VARCHAR" property="brandName" />
		<result column="meituan_profit" jdbcType="INTEGER" property="meituanProfit" />
		<result column="eleme_profit" jdbcType="INTEGER" property="elemeProfit" />
		<result column="settle_date" jdbcType="VARCHAR" property="settleDate" />
		<result column="order_amount" jdbcType="INTEGER" property="orderAmount" />
	</resultMap>
	<select id="queryMemberBill" resultMap="MemberBillResultMap">
	select * from (
		select a.member_id, c.member_name, c.brand, d.param_value as
		brand_name,
		a.meituan_profit, a.eleme_profit, a.settle_date,
		IFNULL(b.order_amount, 0) as order_amount from
		t_platform_profit a
		left
		join (select member_id, order_date, sum(member_price*num) as
		order_amount from t_order_info group by member_id, order_date) b
		on
		a.settle_date = b.order_date and a.member_id = b.member_id
		inner join
		t_member_info c on a.member_id = c.id
		<if test="brandId != null">
			AND c.brand = #{brandId, jdbcType=VARCHAR}
		</if>
		<if test="memberId != null">
			AND c.id = #{memberId, jdbcType=INTEGER}
		</if>
		<if test="beginDate != null">
			AND a.settle_date &gt;= #{beginDate, jdbcType=VARCHAR}
		</if>
		<if test="endDate != null">
			AND a.settle_date &lt;= #{endDate, jdbcType=VARCHAR}
		</if>
		inner join t_sys_param d on d.param_name = 'brand' and d.param_key =
		c.brand
		union
		select b.member_id, c.member_name, c.brand, d.param_value
		as brand_name,
		IFNULL(a.meituan_profit, 0) as meituan_profit,
		IFNULL(a.eleme_profit, 0) as eleme_profit, b.order_date as
		settle_date,
		b.order_amount from t_platform_profit a
		right join (select
		member_id, order_date, sum(member_price*num) as
		order_amount from
		t_order_info group by member_id, order_date) b
		on a.settle_date =
		b.order_date and a.member_id = b.member_id
		inner join t_member_info c
		on b.member_id = c.id
		<if test="brandId != null">
			AND c.brand = #{brandId, jdbcType=VARCHAR}
		</if>
		<if test="memberId != null">
			AND c.id = #{memberId, jdbcType=INTEGER}
		</if>
		<if test="beginDate != null">
			AND b.order_date &gt;= #{beginDate, jdbcType=VARCHAR}
		</if>
		<if test="endDate != null">
			AND b.order_date &lt;= #{endDate, jdbcType=VARCHAR}
		</if>
		inner join t_sys_param d on d.param_name = 'brand' and d.param_key =
		c.brand
		)al order by member_id, settle_date
	</select>
	<resultMap id="SupplierBillResultMap"
		type="com.cjh.InventoryMng.entity.VSuppplierBillInfo">
		<result column="brand_id" jdbcType="INTEGER" property="brandId" />
		<result column="brand_name" jdbcType="VARCHAR" property="brandName" />
		<result column="member_id" jdbcType="INTEGER" property="memberId" />
		<result column="member_name" jdbcType="VARCHAR" property="memberName" />
		<result column="good_id" jdbcType="INTEGER" property="goodId" />
		<result column="good_name" jdbcType="VARCHAR" property="goodName" />
		<result column="price" jdbcType="INTEGER" property="price" />
		<result column="num" jdbcType="DOUBLE" property="num" />
		<result column="supplierId" jdbcType="INTEGER" property="supplierId" />
		<result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
		<result column="order_date" jdbcType="VARCHAR" property="orderDate" />
		<result column="member_price" jdbcType="INTEGER" property="memberPrice" />
		<result column="manufacturer_id" jdbcType="INTEGER" property="manufacturerId" />
		<result column="manufacturer_name" jdbcType="VARCHAR" property="manufacturerName" />
		<result column="servicePrice" jdbcType="INTEGER" property="servicePrice" />
	</resultMap>
	<select id="querySupplierBill" resultMap="SupplierBillResultMap">
		select d.brand as brand_id, e.param_value as brand_name, member_id,
		member_name, good_id, c.good_name, price, num, supplierId,
		supplier_name, b.servicePrice,
		order_date, b.member_price, f.param_value as
		manufacturer_name, c.manufacturer_id
		from t_supplier a, ( select * from (
		select
		id, member_id, good_id, member_price, purchase_price - ifnull(service_price, 0) as price, 0 as servicePrice, num,
		order_date,
		supplierId as supplierId from t_order_info where 1=1 and status = 1
		<if test="beginDate != null">
			AND order_date &gt;= #{beginDate, jdbcType=VARCHAR}
		</if>
		<if test="endDate != null">
			AND order_date &lt;= #{endDate, jdbcType=VARCHAR}
		</if>
		<if test="supplierId != null">
			AND supplierId = #{supplierId, jdbcType=INTEGER}
		</if>
		<if test="memberIds!=null and memberIds.size!=0">
			AND member_id in
			<foreach collection="memberIds" item="memberId"
                    index="index" open="(" close=")" separator=",">
                    #{memberId}
            </foreach>
		</if>
		union all
		select id, member_id, good_id,  0 as member_price, 0 as price, service_price as servicePrice, num,
		order_date,
		service_id as supplierId from t_order_info b
		where service_id is not
		null and status = 1 
		<if test="beginDate != null">
			AND order_date &gt;= #{beginDate, jdbcType=VARCHAR}
		</if>
		<if test="endDate != null">
			AND order_date &lt;= #{endDate, jdbcType=VARCHAR}
		</if>
		<if test="supplierId != null">
			AND service_id = #{supplierId, jdbcType=INTEGER}
		</if>
		<if test="memberIds!=null and memberIds.size!=0">
			AND member_id in
			<foreach collection="memberIds" item="memberId"
                    index="index" open="(" close=")" separator=",">
                    #{memberId}
            </foreach>
		</if>
		) b1
		<if test="pageNo != null and pageSize != null">
		order by b1.id LIMIT #{pageNo, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
		</if>
		)b, t_goods_info c, t_member_info d, t_sys_param e, t_sys_param f
		where a.id = b.supplierId and c.id = b.good_id and d.id = b.member_id
		and
		e.param_name = 'brand' and e.param_key = d.brand and
		c.manufacturer_id = f.param_key
		and f.param_name = 'manufacturer'
	</select>
	<resultMap id="VRoleResourceResultMap" type="com.cjh.InventoryMng.entity.VRoleResourceInfo">
		<result column="resource_id" jdbcType="INTEGER" property="resourceId" />
		<result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
		<result column="resource_url" jdbcType="VARCHAR" property="resourceUrl" />
		<result column="checked" jdbcType="BOOLEAN" property="checked" />
	</resultMap>
	<select id="queryResourceOfRole" resultMap="VRoleResourceResultMap">
		select b.id as
		resource_id, b.resource_url, b.resource_name, IFNULL(a.role_id, 0) as
		checked from (select * from t_resource_role where role_id =
		#{roleId, jdbcType=INTEGER} AND status = 1) a
		right join t_resource_info b
		on
		a.resource_id = b.id
		order by b.id
	</select>
	<resultMap id="VMemberSupplierResultMap" type="com.cjh.InventoryMng.entity.VMemberSupplierMap">
		<result column="group_map_id" jdbcType="INTEGER" property="groupMapId" />
		<result column="member_name" jdbcType="VARCHAR" property="memberName" />
		<result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
		<result column="member_id" jdbcType="INTEGER" property="memberId" />
		<result column="supplier_name" jdbcType="INTEGER" property="supplierName" />
		<result column="checked" jdbcType="BOOLEAN" property="checked" />
	</resultMap>	
	<select id="querySupplierOfMember" resultMap="VMemberSupplierResultMap">
		select c.id as group_map_id, d.id as supplier_id, c.member_id, c.member_name, IFNULL(c.status, 0) as checked, d.supplier_name
		from (select a.id, a.supplier_id, a.member_id, b.member_name, a.status 
			from t_group_map a, t_member_info b 
			where a.member_id = #{memberId, jdbcType=INTEGER} and a.member_id = b.id) c 
		right join (select * from t_supplier where status = 1) d on c.supplier_id = d.id
		order by d.id
	</select>
	
	<select id="queryMemberAvailableGoods" resultMap="GoodsResultMap">
		select c.* from t_group_map a, t_supplier b, t_goods_info c
			where a.member_id = #{memberId, jdbcType=INTEGER} and a.supplier_id = b.id 
			and a.status = 1
			and c.supplier_id = b.id and b.status = 1 and c.status = 1
			order by c.id
	</select>
	
	<resultMap id="VMemberOrderInfoOrderByResultMap" type="com.cjh.InventoryMng.entity.VMemberOrderInfoOrderBy">
		<result column="member_id" jdbcType="INTEGER" property="memberId" />
		<result column="member_name" jdbcType="VARCHAR" property="memberName" />
		<result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
		<result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
		<result column="good_id" jdbcType="INTEGER" property="goodsId" />
		<result column="good_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="num" jdbcType="INTEGER" property="num" />
		<result column="order_date" jdbcType="VARCHAR" property="orderDate" />
		<result column="address" jdbcType="VARCHAR" property="address" />
	</resultMap>
	
	<select id="queryMemberOrderInfoOrderBy" resultMap="VMemberOrderInfoOrderByResultMap">
		select d.phone, c.member_id, d.member_name, c.supplierId, e.supplier_name, c.good_id, f.good_name, c.num, c.order_date, d.address 
			from (
				select a.member_id, a.supplierId as supplierId, good_id, num, order_date 
				from t_order_info a 
				where a.status = 1 
				<if test="memberId != null">
					AND member_id = #{memberId, jdbcType=INTEGER}
				</if>
				and a.order_date = #{orderDate, jdbcType=VARCHAR} and a.service_id is null
					union
				select b.member_id, b.service_id as supplierId, good_id, num, order_date 
				from t_order_info b 
				where b.status = 1
				<if test="memberId != null">
					AND member_id = #{memberId, jdbcType=INTEGER}
				</if> 
				and b.order_date = #{orderDate, jdbcType=VARCHAR} and b.service_id is not null 
				)c, 
				t_member_info d, 
				t_supplier e, 
				t_goods_info f
				where c.member_id = d.id and c.supplierId = e.id and c.good_id = f.id
				<if test="brandId != null">
					AND d.brand = #{brandId, jdbcType=VARCHAR}
				</if> 
				order by  c.supplierId, c.member_id
	</select>
	
	<select id="queryMaxSettleDate" resultType="java.lang.String">
		select max(settle_date) from t_platform_profit
	</select>	
	
	
	<resultMap id="VUseGoodsCountMap" type="com.cjh.InventoryMng.entity.VUseGoodsCount">
		<result column="good_id" jdbcType="INTEGER" property="goodsId" />
		<result column="manufacturer_id" jdbcType="INTEGER" property="manufacturerId" />
		<result column="good_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="specifications" jdbcType="VARCHAR" property="specifications" />
		<result column="num" jdbcType="INTEGER" property="num" />
	</resultMap>
	<select id="queryUseGoodsCount" resultMap="VUseGoodsCountMap">
	select * from (
		select b.id, b.good_name, b.manufacturer_id, b.specifications, sum(a.num) as num from t_order_info a, t_goods_info b 
		 where 1 = 1 and a.status = 1 
		and a.good_id = b.id 
		<if test="beginDate != null">
			AND a.order_date &gt;= #{beginDate, jdbcType=VARCHAR}
		</if>
		<if test="endDate != null">
			AND a.order_date &lt;= #{endDate, jdbcType=VARCHAR}
		</if>
		<if test="memberId != null">
			AND a.member_id = #{memberId, jdbcType=INTEGER}
		</if>
		<if test="goodsName != null">
			AND b.good_name like CONCAT('%', #{goodsName, jdbcType=VARCHAR},'%')
		</if>
		group by a.good_id ) c order by  c.num desc, c.id
	</select>
	
	<resultMap id="VStockInfo" type="com.cjh.InventoryMng.entity.VStockInfo">
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="good_id" jdbcType="INTEGER" property="goodsId" />
		<result column="good_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
		<result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
		<result column="count" jdbcType="INTEGER" property="count" />
		<result column="status" jdbcType="INTEGER" property="status" />
	</resultMap>
	<select id="queryStockInfoByGoodsName" resultMap="VStockInfo">
		 select a.id, b.id, b.good_name, c.id, c.supplier_name, a.count, a.status
		 	 from t_stock_info a, t_goods_info b, t_supplier c
				where a.good_id = b.id and b.supplier_id = c.id
				and b.good_name like CONCAT('%', #{goodsName, jdbcType=VARCHAR},'%')
				order by a.id
	</select>
	
</mapper>