<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjh.InventoryMng.mapper.TOrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.cjh.InventoryMng.entity.TOrderInfo">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="purchase_price" jdbcType="INTEGER" property="purchasePrice" />
    <result column="member_price" jdbcType="INTEGER" property="memberPrice" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_date" jdbcType="VARCHAR" property="orderDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierid" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="service_price" jdbcType="INTEGER" property="servicePrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, member_id, good_id, purchase_price, member_price, num, order_time, order_date, 
    status, supplierId, service_id, service_price
  </sql>
  <select id="selectByExample" parameterType="com.cjh.InventoryMng.entity.TOrderInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order_info
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order_info
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cjh.InventoryMng.entity.TOrderInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order_info (member_id, good_id, purchase_price, 
      member_price, num, order_time, 
      order_date, status, supplierId, 
      service_id, service_price)
    values (#{memberId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{purchasePrice,jdbcType=INTEGER}, 
      #{memberPrice,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{orderDate,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{supplierid,jdbcType=INTEGER}, 
      #{serviceId,jdbcType=INTEGER}, #{servicePrice,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cjh.InventoryMng.entity.TOrderInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="purchasePrice != null">
        purchase_price,
      </if>
      <if test="memberPrice != null">
        member_price,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="supplierid != null">
        supplierId,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="servicePrice != null">
        service_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=INTEGER},
      </if>
      <if test="memberPrice != null">
        #{memberPrice,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="supplierid != null">
        #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="servicePrice != null">
        #{servicePrice,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cjh.InventoryMng.entity.TOrderInfoExample" resultType="java.lang.Long">
    select count(*) from t_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order_info
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.purchasePrice != null">
        purchase_price = #{record.purchasePrice,jdbcType=INTEGER},
      </if>
      <if test="record.memberPrice != null">
        member_price = #{record.memberPrice,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderDate != null">
        order_date = #{record.orderDate,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.supplierid != null">
        supplierId = #{record.supplierid,jdbcType=INTEGER},
      </if>
      <if test="record.serviceId != null">
        service_id = #{record.serviceId,jdbcType=INTEGER},
      </if>
      <if test="record.servicePrice != null">
        service_price = #{record.servicePrice,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order_info
    set Id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      purchase_price = #{record.purchasePrice,jdbcType=INTEGER},
      member_price = #{record.memberPrice,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      order_date = #{record.orderDate,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      supplierId = #{record.supplierid,jdbcType=INTEGER},
      service_id = #{record.serviceId,jdbcType=INTEGER},
      service_price = #{record.servicePrice,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cjh.InventoryMng.entity.TOrderInfo">
    update t_order_info
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null">
        purchase_price = #{purchasePrice,jdbcType=INTEGER},
      </if>
      <if test="memberPrice != null">
        member_price = #{memberPrice,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="supplierid != null">
        supplierId = #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="servicePrice != null">
        service_price = #{servicePrice,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cjh.InventoryMng.entity.TOrderInfo">
    update t_order_info
    set member_id = #{memberId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      purchase_price = #{purchasePrice,jdbcType=INTEGER},
      member_price = #{memberPrice,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_date = #{orderDate,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      supplierId = #{supplierid,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=INTEGER},
      service_price = #{servicePrice,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>